{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","translateX","this","props","images","itemWidth","frameSize","step","animationDuration","carouselWidth","scrollSize","maxTranslateX","length","className","style","width","gap","transform","transition","map","image","src","alt","type","onClick","setState","disabled","Component","App","setParams","e","preventDefault","currentTarget","name","value","Number","htmlFor","id","onChange","defaultValue","required","min","max","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.659c34af.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n};\n\ntype State = {\n  translateX: number;\n};\n\nclass Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    translateX: 0,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.props;\n\n    const { translateX } = this.state;\n\n    const gap = 10;\n    const carouselWidth = itemWidth * frameSize + gap * (frameSize - 1);\n\n    const scrollSize = step * itemWidth + step * gap;\n    const maxTranslateX = -(itemWidth * (images.length - frameSize)\n       + gap * (images.length - frameSize));\n\n    const moveToNext = () => {\n      this.setState(\n        (translateX - scrollSize) < maxTranslateX\n          ? { translateX: maxTranslateX }\n          : { translateX: (translateX - scrollSize) },\n      );\n    };\n\n    const moveToPrev = () => {\n      this.setState(\n        (translateX + scrollSize) > 0\n          ? { translateX: 0 }\n          : { translateX: (translateX + scrollSize) },\n      );\n    };\n\n    return (\n      <div className=\"Carousel\">\n        <div className=\"Carousel__content\" style={{ width: carouselWidth }}>\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              gap,\n              transform: `translateX(${translateX}px)`,\n              transition: `transform ${animationDuration}ms ease`,\n            }}\n          >\n            {images.map((image) => (\n              <li key={image}>\n                <img\n                  src={image}\n                  alt=\"img\"\n                  width={itemWidth}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            className=\"Carousel__button Carousel__button--prev\"\n            type=\"button\"\n            onClick={moveToPrev}\n            disabled={translateX === 0}\n          />\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            className=\"Carousel__button Carousel__button--next\"\n            data-cy=\"next\"\n            type=\"button\"\n            onClick={moveToNext}\n            disabled={translateX === maxTranslateX}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {[key: string]: number | string[]}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  setParams = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: Number(value) });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <form className=\"App__controls\">\n          <label className=\"App__controlsField\" htmlFor=\"itemId\">\n            <span className=\"App_controlsLabel\">Images Size:</span>\n            <input\n              id=\"itemId\"\n              onChange={(e) => this.setParams(e)}\n              className=\"App__controlsInput\"\n              type=\"number\"\n              name=\"itemWidth\"\n              defaultValue={itemWidth}\n              required\n            />\n          </label>\n\n          <label className=\"App__controlsField\" htmlFor=\"frameId\">\n            <span className=\"App_controlsLabel\">Frame Size:</span>\n            <input\n              id=\"frameId\"\n              onChange={(e) => this.setParams(e)}\n              className=\"App__controlsInput\"\n              type=\"number\"\n              name=\"frameSize\"\n              defaultValue={frameSize}\n              min={1}\n              max={images.length}\n              required\n            />\n          </label>\n\n          <label className=\"App__controlsField\" htmlFor=\"stepId\">\n            <span className=\"App_controlsLabel\">Step:</span>\n            <input\n              id=\"stepId\"\n              onChange={(e) => this.setParams(e)}\n              className=\"App__controlsInput\"\n              type=\"number\"\n              name=\"step\"\n              defaultValue={step}\n              min={1}\n              max={images.length}\n              required\n            />\n          </label>\n\n          <label className=\"App__controlsField\">\n            <span className=\"App_controlsLabel\">Animation duration:</span>\n            <input\n              onChange={(e) => this.setParams(e)}\n              className=\"App__controlsInput\"\n              type=\"number\"\n              name=\"animationDuration\"\n              defaultValue={animationDuration}\n              required\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}